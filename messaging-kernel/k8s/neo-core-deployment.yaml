apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo-core
  namespace: neo-messaging
  labels:
    app.kubernetes.io/name: neo-messaging-kernel
    app.kubernetes.io/component: core
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: neo-messaging-kernel
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: neo-messaging-kernel
        app.kubernetes.io/component: core
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: neo-core
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: neo-core
        image: neo-messaging-kernel:latest
        imagePullPolicy: Always
        ports:
        - name: neo-protocol
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 9091
          protocol: TCP
        env:
        - name: NEO_LOG_LEVEL
          value: "info"
        - name: NEO_ENV
          value: "production"
        - name: NEO_CLUSTER_ID
          value: "neo-cluster"
        - name: NEO_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NEO_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NEO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: config
          mountPath: /etc/neo
          readOnly: true
        - name: data
          mountPath: /var/lib/neo
        - name: logs
          mountPath: /var/log/neo
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: neo-config
      - name: data
        persistentVolumeClaim:
          claimName: neo-data
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - neo-messaging-kernel
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - core
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "neo-messaging-kernel"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"